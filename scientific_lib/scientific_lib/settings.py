"""
Django settings for scientific_lib project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&#)qifz7smr0ak$3ssd)yx#bd(@f7ks#!y2m-b^469sizu&mx2'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    "jazzmin",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "core",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'scientific_lib.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'scientific_lib.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
# Configurações do Jazzmin
JAZZMIN_SETTINGS = {
    # título da janela (irá utilizar current_admin_site.site_title se estiver ausente ou None)
    "site_title": "Scientific Library",
    # Título na tela de login (máximo de 19 caracteres) (irá utilizar current_admin_site.site_header se estiver ausente ou None)
    "site_header": "Scientific Library ",
    # Título na marca (máximo de 19 caracteres) (irá utilizar current_admin_site.site_header se estiver ausente ou None)
    "site_brand": "Scientific Library",
    # Logo para usar no seu site, deve estar presente nos arquivos estáticos, usado para a marca no canto superior esquerdo
    "site_logo": "/img/logo128.ico",
    # Logo para usar no formulário de login (irá utilizar site_logo se estiver ausente)
    "login_logo": "/img/logo128.ico",
    # Logo para usar no formulário de login em temas escuros (irá utilizar login_logo se estiver ausente)
    "login_logo_dark": None,
    # Classes CSS aplicadas ao logo acima
    "site_logo_classes": "img-circle",
    # Caminho relativo para um favicon para o seu site, irá utilizar site_logo se estiver ausente (idealmente 32x32 px)
    "site_icon": '/img/logo128.ico',
    # Texto de boas-vindas na tela de login
    "welcome_sign": "Bem vindo!",
    # Direitos autorais no rodapé
    "copyright": "@CM Soluções Digitais",
    # Lista de model admins para buscar a partir da barra de pesquisa, barra de pesquisa omitida se excluída
    # Se você quiser usar um único campo de pesquisa, não precisa usar uma lista, pode usar uma string simples
    "search_model": ["auth.User", "auth.Group"],
    # Nome do campo no modelo de usuário que contém o avatar ImageField/URLField/Charfield ou uma função chamada que recebe o usuário
    "user_avatar": None,
    ############
    # Menu Superior #
    ############
    # Links para colocar ao longo do menu superior
    "topmenu_links": [
        # URL que será revertida (Permissões podem ser adicionadas)
        {"name": "Início", "url": "admin:index", "permissions": ["auth.view_user"]},
        # URL externa que abre em uma nova janela (Permissões podem ser adicionadas)
        {
            "name": "Suporte",
            "url": "https://github.com/farridav/django-jazzmin/issues",
            "new_window": True,
        },
        # modelo admin para linkar (Permissões verificadas contra o modelo)
        {"model": "auth.User"},
        # App com menu suspenso para todas as páginas de seus modelos (Permissões verificadas contra modelos)
        {"app": "core"},
    ],
    #############
    # Menu do Usuário #
    #############
    # Links adicionais para incluir no menu do usuário no canto superior direito (tipo de URL "app" não é permitido)
    "usermenu_links": [
        {
            "name": "Suporte",
            "url": "{% url 'enviar_email_suporte' %}",
            "new_window": True,
        },
        {"model": "auth.user"},
    ],
    #############
    # Menu Lateral #
    #############
    # Se deve exibir o menu lateral
    "show_sidebar": True,
    # Se deve expandir automaticamente o menu
    "navigation_expanded": True,
    # Esconde esses apps ao gerar o menu lateral, por exemplo (auth)
    "hide_apps": [],
    # Esconde esses modelos ao gerar o menu lateral (por exemplo auth.user)
    "hide_models": [],
    # Lista de apps (e/ou modelos) para basear a ordenação do menu lateral (não precisa conter todos os apps/modelos)
    "order_with_respect_to": ["auth", "books", "books.author", "books.book"],
    # Links personalizados para adicionar aos grupos de apps, identificados pelo nome do app
    "custom_links": {
        "books": [
            {
                "name": "Criar Mensagens",
                "url": "make_messages",
                "icon": "fas fa-comments",
                "permissions": ["books.view_book"],
            }
        ]
    },
    # Ícones personalizados para apps/modelos do menu lateral Veja https://fontawesome.com/icons?d=gallery&m=free&v=5.0.0,5.0.1,5.0.10,5.0.11,5.0.12,5.0.13,5.0.2,5.0.3,5.0.4,5.0.5,5.0.6,5.0.7,5.0.8,5.0.9,5.1.0,5.1.1,5.2.0,5.3.0,5.3.1,5.4.0,5.4.1,5.4.2,5.13.0,5.12.0,5.11.2,5.11.1,5.10.0,5.9.0,5.8.2,5.8.1,5.7.2,5.7.1,5.7.0,5.6.3,5.5.0,5.4.2
    # para a lista completa de classes de ícones grátis 5.13.0
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
    },
    # Ícones usados quando um não é especificado manualmente
    "default_icon_parents": "fas fa-chevron-circle-right",
    "default_icon_children": "fas fa-circle",
    #################
    # Modal Relacionado #
    #################
    # Usar modais em vez de popups
    "related_modal_active": False,
    #############
    # Ajustes da UI #
    #############
    # Caminhos relativos para scripts CSS/JS personalizados (deve estar presente nos arquivos estáticos)
    "custom_css": None,
    "custom_js": None,
    # Se deve vincular a fonte de fonts.googleapis.com (use custom_css para fornecer a fonte caso contrário)
    "use_google_fonts_cdn": True,
    # Se deve mostrar o personalizador de UI na barra lateral
    "show_ui_builder": False,
    ###############
    # Visualização de Mudanças #
    ###############
    # Renderizar a visualização de mudanças como um único formulário, ou em abas, opções atuais são
    # - single
    # - horizontal_tabs (padrão)
    # - vertical_tabs
    # - collapsible
    # - carousel
    "changeform_format": "horizontal_tabs",
    # substituir formulários de alteração em uma base de modelo de modelo
    "changeform_format_overrides": {
        "auth.user": "collapsible",
        "auth.group": "vertical_tabs",
    },
    # Adicionar um menu suspenso de idioma no admin
    "language_chooser": False,
}

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]

MEDIA_ROOT= os.path.join(BASE_DIR, 'uploads')
MEDIA_URL='/uploads/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
